{"ast":null,"code":"import * as i1 from '@ngx-loading-bar/core';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HttpContextToken, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { tap, finalize } from 'rxjs/operators';\nconst NGX_LOADING_BAR_IGNORED = new HttpContextToken(() => false);\n\nclass LoadingBarInterceptor {\n  constructor(loader) {\n    this.loader = loader;\n  }\n\n  intercept(req, next) {\n    // https://github.com/angular/angular/issues/18155\n    if (req.headers.has('ignoreLoadingBar')) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(`Using http headers ('ignoreLoadingBar') to ignore loading bar is deprecated. Use HttpContext instead: 'context: new HttpContext().set(NGX_LOADING_BAR_IGNORED, true)'`);\n      }\n\n      return next.handle(req.clone({\n        headers: req.headers.delete('ignoreLoadingBar')\n      }));\n    }\n\n    if (req.context.get(NGX_LOADING_BAR_IGNORED) === true) {\n      return next.handle(req);\n    }\n\n    let started = false;\n    const ref = this.loader.useRef('http');\n    return next.handle(req).pipe(tap(() => {\n      if (!started) {\n        ref.start();\n        started = true;\n      }\n    }), finalize(() => started && ref.complete()));\n  }\n\n}\n\nLoadingBarInterceptor.ɵfac = function LoadingBarInterceptor_Factory(t) {\n  return new (t || LoadingBarInterceptor)(i0.ɵɵinject(i1.LoadingBarService));\n};\n\nLoadingBarInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LoadingBarInterceptor,\n  factory: LoadingBarInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingBarInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.LoadingBarService\n    }];\n  }, null);\n})();\n\nclass LoadingBarHttpClientModule {}\n\nLoadingBarHttpClientModule.ɵfac = function LoadingBarHttpClientModule_Factory(t) {\n  return new (t || LoadingBarHttpClientModule)();\n};\n\nLoadingBarHttpClientModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoadingBarHttpClientModule\n});\nLoadingBarHttpClientModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoadingBarInterceptor,\n    multi: true\n  }],\n  imports: [[HttpClientModule, LoadingBarModule], HttpClientModule, LoadingBarModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoadingBarHttpClientModule, [{\n    type: NgModule,\n    args: [{\n      imports: [HttpClientModule, LoadingBarModule],\n      exports: [HttpClientModule, LoadingBarModule],\n      providers: [{\n        provide: HTTP_INTERCEPTORS,\n        useClass: LoadingBarInterceptor,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LoadingBarHttpClientModule, NGX_LOADING_BAR_IGNORED };","map":{"version":3,"names":["i1","LoadingBarModule","i0","Injectable","NgModule","HttpContextToken","HttpClientModule","HTTP_INTERCEPTORS","tap","finalize","NGX_LOADING_BAR_IGNORED","LoadingBarInterceptor","constructor","loader","intercept","req","next","headers","has","ngDevMode","console","warn","handle","clone","delete","context","get","started","ref","useRef","pipe","start","complete","ɵfac","LoadingBarService","ɵprov","type","LoadingBarHttpClientModule","ɵmod","ɵinj","provide","useClass","multi","args","imports","exports","providers"],"sources":["C:/Users/jeswi/OneDrive/Desktop/Projects/NEWSTC/node_modules/@ngx-loading-bar/http-client/fesm2020/ngx-loading-bar-http-client.mjs"],"sourcesContent":["import * as i1 from '@ngx-loading-bar/core';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HttpContextToken, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { tap, finalize } from 'rxjs/operators';\n\nconst NGX_LOADING_BAR_IGNORED = new HttpContextToken(() => false);\nclass LoadingBarInterceptor {\n    constructor(loader) {\n        this.loader = loader;\n    }\n    intercept(req, next) {\n        // https://github.com/angular/angular/issues/18155\n        if (req.headers.has('ignoreLoadingBar')) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                console.warn(`Using http headers ('ignoreLoadingBar') to ignore loading bar is deprecated. Use HttpContext instead: 'context: new HttpContext().set(NGX_LOADING_BAR_IGNORED, true)'`);\n            }\n            return next.handle(req.clone({ headers: req.headers.delete('ignoreLoadingBar') }));\n        }\n        if (req.context.get(NGX_LOADING_BAR_IGNORED) === true) {\n            return next.handle(req);\n        }\n        let started = false;\n        const ref = this.loader.useRef('http');\n        return next.handle(req).pipe(tap(() => {\n            if (!started) {\n                ref.start();\n                started = true;\n            }\n        }), finalize(() => started && ref.complete()));\n    }\n}\nLoadingBarInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarInterceptor, deps: [{ token: i1.LoadingBarService }], target: i0.ɵɵFactoryTarget.Injectable });\nLoadingBarInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.LoadingBarService }]; } });\n\nclass LoadingBarHttpClientModule {\n}\nLoadingBarHttpClientModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarHttpClientModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoadingBarHttpClientModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarHttpClientModule, imports: [HttpClientModule, LoadingBarModule], exports: [HttpClientModule, LoadingBarModule] });\nLoadingBarHttpClientModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarHttpClientModule, providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: LoadingBarInterceptor,\n            multi: true,\n        },\n    ], imports: [[HttpClientModule, LoadingBarModule], HttpClientModule, LoadingBarModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LoadingBarHttpClientModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [HttpClientModule, LoadingBarModule],\n                    exports: [HttpClientModule, LoadingBarModule],\n                    providers: [\n                        {\n                            provide: HTTP_INTERCEPTORS,\n                            useClass: LoadingBarInterceptor,\n                            multi: true,\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoadingBarHttpClientModule, NGX_LOADING_BAR_IGNORED };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}